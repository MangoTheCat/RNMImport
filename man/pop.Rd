% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parseutils.R
\name{pop}
\alias{pop}
\title{pop}
\usage{
pop(txt, option, mode = c("logical", "equal", "brackets", "comments"),
  inPlace = TRUE, absent = if (mode == "logical") FALSE else NULL,
  ignore.case = TRUE, shortcut = FALSE, sep = "=", .depth = 1,
  removeBrackets = (mode == "brackets"), numeric = FALSE, ...)
}
\arguments{
\item{txt}{[C,+] the text to process}

\item{option}{[C,+] the option to search for, e.g. "PRINT", "NOPRINT", etc.}

\item{mode}{[C,1] Select "logical", "equal", "brackets", or "comments". 
Controls the type of data that is returned.}

\item{inPlace}{[L,1] Logical flag.  If TRUE, modifies the input text "in place"
(in the current location),
otherwise it is returned as a component in a list}

\item{absent}{What to return if the string is missing}

\item{ignore.case}{If TRUE, ignores case}

\item{shortcut}{[L, 1] is option a NM-TRAN shortcut (e.g. FIX for FIXED)? 
If so, modify regex when mode is "equal"(default FALSE)}

\item{sep}{[C,1] character to use a separator between key and value}

\item{removeBrackets}{[L,1]}

\item{numeric}{[L, 1] Logical flag.  If TRUE, will return as numeric}

\item{\dots}{additional arguments to regex functions}
}
\value{
logical, numeric, or character vector or NULL
}
\description{
A collection of functions for identifying patterns in string vectors, 
then either in-place removing them from the string
or returning the strings with the pattern removed.
Searches for a pre-specified text pattern in a set of strings 
and then either returns those strings without the text, 
together with a certain return value (controlled by "mode"),
or directly remove the text pattern "in place" (if inPlace = TRUE)
The mode may be: \itemize{
    \item "logical", a TRUE if the option is found, FALSE otherwise
    \item "equal" extract text which follows option followed by an equal sign (NULL if no text)
    \item "brackets" extract the object held in brackets
    \item "comments" extract text which follows comment character ";"
}
}
\examples{
txt <- c("$PROBLEM  THEOPHYLLINE   SINGLE SUBJECT DATA",
    "   ; modified version of file from run file of NONMEM installation",
    "$INPUT  ID DOSE=AMT TIME CP=DV",
    "$DATA  DATA3.txt",
    "$SUBROUTINES  ADVAN2")
RNMImport:::pop(txt = txt, option = "ADVAN2")
RNMImport:::pop(txt = txt, option = "DOSE", mode = "equal")
RNMImport:::pop(txt = txt, mode = "comments")
}
\author{
Mango Solutions
}
